plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.2.1'
}
group = 'com.co.izyacademy'
version = '1.0-SNAPSHOT'

repositories {
    gradlePluginPortal()
    mavenCentral()
    maven {
        url = "https://repo1.maven.org/maven2"
    }
}

defaultTasks 'clean', 'test', 'aggregate'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

ext {
    serenity_version = '4.2.1'
    junit_platform_launcher_version="1.11.0"
    cucumber_junit_platform_engine_version="7.16.1"
    junit_platform_suite_version="1.11.0"
    junit_jupiter_engine_version="5.11.0"
    junit_vintage_engine_version="5.11.0"
    logback_classic_version="1.4.14"
    assertj_core_version="3.23.1"
}

dependencies {
    compileOnly "org.projectlombok:lombok:1.18.30"
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation "net.serenity-bdd:serenity-core:${serenity_version}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenity_version}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenity_version}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenity_version}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenity_version}"
    implementation "net.serenity-bdd:serenity-ensure:${serenity_version}"
    implementation "org.junit.platform:junit-platform-launcher:${junit_platform_launcher_version}"
    implementation "io.cucumber:cucumber-junit-platform-engine:${cucumber_junit_platform_engine_version}"
    implementation "org.junit.platform:junit-platform-suite:${junit_platform_suite_version}"
    implementation "org.junit.jupiter:junit-jupiter-engine:${junit_jupiter_engine_version}"
    implementation "ch.qos.logback:logback-classic:${logback_classic_version}"
    implementation "org.assertj:assertj-core:${assertj_core_version}"
    implementation 'io.appium:java-client:8.5.1'
    testImplementation 'net.serenity-bdd:serenity-junit:4.2.1'
    testImplementation 'io.cucumber:cucumber-java:7.15.0'
    testImplementation 'io.cucumber:cucumber-junit:7.15.0'
    implementation("io.github.bonigarcia:webdrivermanager:6.0.0") {
        exclude group: "org.seleniumhq.selenium", module: "selenium-java"
    }
    testImplementation "org.slf4j:slf4j-api:2.0.9"
    testImplementation "ch.qos.logback:logback-core:1.4.14"
    implementation "org.apache.poi:poi-ooxml:5.2.3"
}

serenity {
    reports = ["single-page-html", "navigator"]
    requirementsDir = "src/test/resources/features"
    testRoot = "com.co.izyacademy"
    outputDirectory = file("${projectDir}/target/site/serenity")
}

aggregate {
    outputs.upToDateWhen { false }
}

// Configurar test DESPUÃ‰S de definir las tareas
test {
    testLogging {
        events "passed", "failed", "skipped"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = true
    }
    gradle.startParameter.continueOnFailure = true
    systemProperties System.getProperties()
    finalizedBy aggregate
}

task generarExamples(type: JavaExec) {
    mainClass = 'com.co.izyacademy.utils.FeatureDataGenerator'
    classpath = sourceSets.main.runtimeClasspath
    description = 'Genera ejemplos en archivos feature desde datos de Excel'
    group = 'feature generation'
}
test.dependsOn generarExamples

compileJava {
    options.encoding = 'UTF-8'
    options.release = 11}
compileTestJava {
    options.encoding = 'UTF-8'
    options.release = 11}